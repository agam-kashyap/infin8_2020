@import url('https://fonts.googleapis.com/css?family=Cute+Font|Kalam|Permanent+Marker|Vidaloka&display=swap');

$colors: (
    background: #3D4E74,
    text: #FDCE41
);

$font: (
    family: sans-serif,
    size: 3vh,
    letter-spacing: 0
);

$config: (
    animated: false,
    nb-letters: 30,
    animation-length: 5s,
    mask-letters: ("0", "1", "0", "1", "0", "1", "0", "1", "0", "1", "0", "1", "0", "1", "0", "1", "0", "1")
);

// ----------------------------------

@function color($value) {
    @return map-get($colors, $value);
}

@function font($value) {
    @return map-get($font, $value);
}

@function config($value) {
    @return map-get($config, $value);
}

@function random-string($list) {
    $result: null;
    @for $i from 1 through length($list) {
        $random: random(length($list));
        $current: nth($list, $random);
        $list: remove-nth($list, $random);
        $result: $result#{$current};
    }
    @return $result;
}

@function remove-nth($list, $index) {
    $result: ();
    @for $i from 1 through length($list) {
        @if $i != $index {
            $result: append($result, nth($list, $i));
        }
    }
    @return $result;
}

@mixin respond-to($breakpoint) {
    @if type-of($breakpoint) == list {
        @media (min-width: nth($breakpoint, 1)) and (max-width: nth($breakpoint, 2)) {
            @content;
        }
    }
    @else {
        @media (max-width: $breakpoint) {
            @content;
        }
    }
}

// ----------------------------------

.wrapper {
    position: relative;
    top: 0%;
    margin-top: -8.5%;
    left: 50%;
    width: 100vw;
    text-align: center;
    font-size: 10vw;
    transform: translate(-50%);
}

.wrapper2 {
    position: relative;
    top: 0%;
    margin-top: -13.0%;
    left: 50%;
    width: 100vw;
    text-align: center;
    font-size: 10vw;
    transform: translate(-50%);
    @media screen and (max-width: 800px){
        font-size: 4vw;
        margin-top: -20vw;
    }
}

.wrapper3 {
    position: relative;
    top: 0%;
    margin-top: -6.0%;
    left: 50%;
    width: 100vw;
    // padding : 1vw;
    height: 10vw;
    text-align: center;
    font-size: 10vw;
    transform: translate(-50%);
    @media screen and (max-width: 800px){
        font-size: 4vw;
        margin-top: -15vw;
    }

}

.letter {
    width: font(size);
    display: inline-block;
    vertical-align: middle;
    position: relative;
    overflow: hidden;
    margin: 0 ceil(font(letter-spacing) / 2);
    font-family: font(family);
    font-size: font(size);
    font-weight: 600;
    line-height: font(size);
    text-transform: uppercase;
    color: color(text);
    @media screen and (max-width: 900px){
        font-size: 4vw;
        width: 2.5vw;
    }
    @media screen and (max-width: 1200px){
        font-size: 3vw;
        width: 3vw;
    }
    &:before {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        word-break: break-all;
        background-color: color(background);
    }
}



// ----------------------------------

@for $i from 1 through config(nb-letters) {
    $length: length(config(mask-letters));
    $random: random($length);
    $steps: $random - 1;
    $offset: font(size) * $steps * -1;
    $delay: random(100) / 100;
      $duration: $steps * (config(animation-length) / $random);
    .letter:nth-child(#{$i}):before {
        content: quote(random-string(config(mask-letters)));
        margin-top: $offset;
        animation-name: letter#{$i};
        animation-duration: $duration - ($duration * $delay);
        animation-delay: $delay * 1s;
        animation-fill-mode: forwards;
    }
    @keyframes letter#{$i} {
        from {
            margin-top: $offset;
        }
        to {
            margin-top: font(size);
        }
    }
}



.numbers {
    width: font(size);
    display: inline-block;
    vertical-align: middle;
    position: relative;
    overflow: hidden;
    font-family: font(family);
    font-size: font(size);
    color: color(text);

    @media screen and (max-width: 1200px){
        font-size: 1vh;
        width: 2.5vw;
    }
    &:before {
        position: absolute;
        top: 0;
        left: 0;
        // width: 100%;
        word-break: break-all;
        background-color: color(background);
    }
}

.space{
    // @media screen and (min-width: 400px){
    //     padding-bottom: 0.001vw;
    // }
    @media screen and (min-width: 700px){
        padding-bottom: 2vw;
    }
    @media screen and (min-width: 1000px){
        padding-bottom: 8vw;
    }
}